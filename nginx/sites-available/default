##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {
	listen 80 default_server;
	#listen [::]:80 default_server;

	# SSL configuration
	#
	#listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	root /var/www/html;

	# Add index.php to the list if you are using PHP
	index index.html index.htm index.nginx-debian.html;

	server_name _;

	#location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		#try_files $uri $uri/ =404;
	#} 
	location / 
	{
		# Finally, send all non-media requests to the Django server.
                include     /etc/nginx/uwsgi_params; # the uwsgi_params file you installed
                uwsgi_pass  django;
        }


        location /media  {
                alias /root/Stroke_Self_Diagnosis/media;  # your Django project's media files - amend as required
        }

        location /static {
                alias /root/Stroke_Self_Diagnosis/static; # your Django project's static files - amend as required
        }

	# ss PHP scripts to FastCGI server
	#
	location ~ \.php$ {
		include snippets/fastcgi-php.conf;
		# With php-fpm (or other unix sockets):
		fastcgi_pass unix:/var/run/php/php7.2-fpm.sock;
		# With php-cgi (or other tcp sockets):
		#fastcgi_pass 127.0.0.1:9000;
	}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}
#
server {
#the port your site will be served on
        listen      443     ssl;
# the domain name it will serve for
        server_name strokesma.com www.strokesma.com; # substitute your machine's IP address or FQDN
        
	access_log  /var/log/nginx/example.com_access.log combined;
        error_log   /var/log/nginx/example.com_error.log error;
        charset     utf-8;

        ssl_certificate     /root/Stroke_Self_Diagnosis/conf.d/django.crt;
        ssl_certificate_key /root/Stroke_Self_Diagnosis/conf.d/django.key;

        error_page 497 https://$server_name$request_uri;

# max upload size
        client_max_body_size 75M;   # adjust to taste

# Django media
        location /media  {
                alias /root/Stroke_Self_Diagnosis/media;  # your Django project's media files - amend as required
        }

        location /static {
                alias /root/Stroke_Self_Diagnosis/static; # your Django project's static files - amend as required
        }

# Finally, send all non-media requests to the Django server.
        location / {
                proxy_pass      http://localhost:8000;
                proxy_redirect  off;

                proxy_set_header        Host            $http_host;
                proxy_set_header        X-Real-IP       $remote_addr;
                proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;

                uwsgi_pass      django;
                include         /etc/nginx/uwsgi_params; # the uwsgi_params file you installed

		proxy_buffer_size	128k;
		proxy_buffers		4 256k;
		proxy_busy_buffers_size	256k;
        }
}
